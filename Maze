import javax.swing.*;
import java.awt.*;
import java.util.Random;

public class MazeGenerator3 extends JPanel {

    private static final int ROWS = 5;
    private static final int COLS = 10;
    private static final int TILE_SIZE = 50;  // Size of each tile
    private int[][] maze3;

    // Constructor
    public MazeGenerator3() {
        // Generate a random maze
        maze3 = new int[ROWS][COLS];
        generateMaze3();
    }

    // Generate a maze with random walls (1) and paths (0)
    private void generateMaze3() {
        Random rand = new Random();
        for (int row = 0; row < ROWS; row++) {
            for (int col = 0; col < COLS; col++) {
                maze3[row][col] = rand.nextInt(2);  // Randomly choose wall (1) or path (0)
            }
        }
    }

    // Drawing the maze
    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g);
        for (int row = 0; row < ROWS; row++) {
            for (int col = 0; col < COLS; col++) {
                if (maze3[row][col] == 1) {
                    g.setColor(Color.BLACK);  // Walls are black
                } else {
                    g.setColor(Color.WHITE);  // Paths are white
                }
                g.fillRect(col * TILE_SIZE, row * TILE_SIZE, TILE_SIZE, TILE_SIZE);
                g.setColor(Color.GRAY);  // Draw grid lines
                g.drawRect(col * TILE_SIZE, row * TILE_SIZE, TILE_SIZE, TILE_SIZE);
            }
        }
    }

    // Set up the JFrame
    private static void createAndShowGUI() {
        JFrame frame = new JFrame("Maze Generator3");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(COLS * TILE_SIZE + 20, ROWS * TILE_SIZE + 40);
        frame.add(new MazeGenerator3());
        frame.setVisible(true);
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> createAndShowGUI());
    }
}
